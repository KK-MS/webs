<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="939px" preserveAspectRatio="none" style="width:1311px;height:939px;" version="1.1" viewBox="0 0 1311 939" width="1311px" zoomAndPan="magnify"><defs><filter height="300%" id="fewimmgxxmy4b" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><text fill="#000000" font-family="sans-serif" font-size="18" lengthAdjust="spacingAndGlyphs" textLength="306" x="501.5" y="26.708">Server.cpp Part:2 (To Run Server)</text><ellipse cx="977.25" cy="40.9531" fill="#000000" filter="url(#fewimmgxxmy4b)" rx="10" ry="10" style="stroke: none; stroke-width: 1.0;"/><rect fill="#FEFECE" filter="url(#fewimmgxxmy4b)" height="47.9375" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="289" x="832.75" y="70.9531"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="0" x="930.75" y="92.0918"/><text fill="#000000" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="57" x="930.75" y="92.0918">int main</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="269" x="842.75" y="106.0605">note right: int main( int argc, char* argv[]);</text><polygon fill="#FEFECE" filter="url(#fewimmgxxmy4b)" points="916.25,138.8906,1038.25,138.8906,1050.25,150.8906,1038.25,162.8906,916.25,162.8906,904.25,150.8906,916.25,138.8906" style="stroke: #A80036; stroke-width: 1.5;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="920.25" y="154.6987">Check command line</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="18" x="886.25" y="148.2964">Try</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="35" x="1050.25" y="148.2964">return</text><rect fill="#FEFECE" filter="url(#fewimmgxxmy4b)" height="89.8438" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="213" x="552" y="172.8906"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="0" x="566" y="194.0293"/><text fill="#000000" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="85" x="566" y="194.0293">if (argc != 3)</text><ellipse cx="567.5" cy="203.3281" fill="#000000" rx="2.5" ry="2.5" style="stroke: #000000; stroke-width: 0.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="152" x="573" y="207.998">check for IP and Port No</text><ellipse cx="567.5" cy="217.2969" fill="#000000" rx="2.5" ry="2.5" style="stroke: #000000; stroke-width: 0.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="182" x="573" y="221.9668">Server address: &lt;&lt; argc[1] )</text><ellipse cx="567.5" cy="231.2656" fill="#000000" rx="2.5" ry="2.5" style="stroke: #000000; stroke-width: 0.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="160" x="573" y="235.9355">Server port:  &lt;&lt; argv[2] )</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="113" x="566" y="249.9043">*Server is starting</text><path d="M184,294.1367 L184,319.2695 A0,0 0 0 0 184,319.2695 L479,319.2695 A0,0 0 0 0 479,319.2695 L479,312.1367 L499,306.7031 L479,304.1367 L479,304.1367 L469,294.1367 L184,294.1367 A0,0 0 0 0 184,294.1367 " fill="#FBFB77" filter="url(#fewimmgxxmy4b)" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M469,294.1367 L469,304.1367 L479,304.1367 L469,294.1367 " fill="#FBFB77" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="274" x="190" y="311.2036">This function helps in setting up the server.</text><rect fill="#FEFECE" filter="url(#fewimmgxxmy4b)" height="47.9375" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="319" x="499" y="282.7344"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="0" x="553" y="303.873"/><text fill="#000000" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="243" x="553" y="303.873">webserver_ setup(argv[1], argv[2])</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="299" x="509" y="317.8418">server::server_setup (char *address char *port)</text><path d="M55,346.3594 L55,416.8906 A0,0 0 0 0 55,416.8906 L434,416.8906 A0,0 0 0 0 434,416.8906 L434,385.625 L454,381.625 L434,377.625 L434,356.3594 L424,346.3594 L55,346.3594 A0,0 0 0 0 55,346.3594 " fill="#FBFB77" filter="url(#fewimmgxxmy4b)" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M424,346.3594 L424,356.3594 L434,356.3594 L424,346.3594 " fill="#FBFB77" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="66.5" cy="358.9922" fill="#000000" rx="2.5" ry="2.5" style="stroke: #000000; stroke-width: 0.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="237" x="72" y="363.4263">This function sets on initialize listener</text><ellipse cx="66.5" cy="374.125" fill="#000000" rx="2.5" ry="2.5" style="stroke: #000000; stroke-width: 0.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="285" x="72" y="378.5591">It means if unknown shared variable appears</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="180" x="69" y="393.6919">server generates this event.</text><ellipse cx="66.5" cy="404.3906" fill="#000000" rx="2.5" ry="2.5" style="stroke: #000000; stroke-width: 0.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="347" x="72" y="408.8247">Listener is function where initialization should be done.</text><rect fill="#FEFECE" filter="url(#fewimmgxxmy4b)" height="61.9063" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="409" x="454" y="350.6719"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="0" x="532" y="371.8105"/><text fill="#000000" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="245" x="532" y="371.8105">webserver_setOnInitEventListener</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="121" x="464" y="385.7793">Pointer to function.</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="389" x="464" y="399.748">void &lt;name of function&gt;(std::string *name, std::string *value)</text><path d="M885,426.8906 L885,473.2891 L865,477.2891 L885,481.2891 L885,527.6875 A0,0 0 0 0 885,527.6875 L1261,527.6875 A0,0 0 0 0 1261,527.6875 L1261,436.8906 L1251,426.8906 L885,426.8906 A0,0 0 0 0 885,426.8906 " fill="#FBFB77" filter="url(#fewimmgxxmy4b)" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1251,426.8906 L1251,436.8906 L1261,436.8906 L1251,426.8906 " fill="#FBFB77" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="896.5" cy="439.5234" fill="#000000" rx="2.5" ry="2.5" style="stroke: #000000; stroke-width: 0.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="235" x="902" y="443.9575">This function sets on update listener.</text><ellipse cx="896.5" cy="454.6563" fill="#000000" rx="2.5" ry="2.5" style="stroke: #000000; stroke-width: 0.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="344" x="902" y="459.0903">It means some shared variable was updated by client.</text><ellipse cx="896.5" cy="469.7891" fill="#000000" rx="2.5" ry="2.5" style="stroke: #000000; stroke-width: 0.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="223" x="902" y="474.2231">server updates shared value inside</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="190" x="899" y="489.356">and then generate this event.</text><ellipse cx="896.5" cy="500.0547" fill="#000000" rx="2.5" ry="2.5" style="stroke: #000000; stroke-width: 0.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="219" x="902" y="504.4888">So application can react somehow</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="254" x="895" y="519.6216">(reconfiguration or something like that).</text><rect fill="#FEFECE" filter="url(#fewimmgxxmy4b)" height="61.9063" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="413" x="452" y="446.3359"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="0" x="534" y="467.4746"/><text fill="#000000" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="274" x="534" y="467.4746">webserver_setOnUpdateEventListener</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="121" x="466" y="481.4434">Pointer to function.</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="389" x="466" y="495.4121">void &lt;name of function&gt;(std::string *name, std::string *value)</text><path d="M10,550.9414 L10,606.3398 A0,0 0 0 0 10,606.3398 L469,606.3398 A0,0 0 0 0 469,606.3398 L469,582.6406 L489,578.6406 L469,574.6406 L469,560.9414 L459,550.9414 L10,550.9414 A0,0 0 0 0 10,550.9414 " fill="#FBFB77" filter="url(#fewimmgxxmy4b)" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M459,550.9414 L459,560.9414 L469,560.9414 L459,550.9414 " fill="#FBFB77" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="21.5" cy="563.5742" fill="#000000" rx="2.5" ry="2.5" style="stroke: #000000; stroke-width: 0.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="251" x="27" y="568.0083">This function sets on command listener</text><ellipse cx="21.5" cy="578.707" fill="#000000" rx="2.5" ry="2.5" style="stroke: #000000; stroke-width: 0.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="427" x="27" y="583.1411">It means if client sent some message that starts with “command:”</text><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="153" x="28" y="598.2739">server generates event.</text><rect fill="#FEFECE" filter="url(#fewimmgxxmy4b)" height="61.9063" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="339" x="489" y="547.6875"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="0" x="527" y="568.8262"/><text fill="#000000" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="291" x="527" y="568.8262">webserver_setOnCommandEventListener</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="117" x="499" y="582.7949">Pointer to function</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="296" x="499" y="596.7637">void &lt;name of function&gt;(std::string *message)</text><path d="M750,626.4453 L750,642.5781 L730,646.5781 L750,650.5781 L750,666.7109 A0,0 0 0 0 750,666.7109 L1176,666.7109 A0,0 0 0 0 1176,666.7109 L1176,636.4453 L1166,626.4453 L750,626.4453 A0,0 0 0 0 750,626.4453 " fill="#FBFB77" filter="url(#fewimmgxxmy4b)" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M1166,626.4453 L1166,636.4453 L1176,636.4453 L1166,626.4453 " fill="#FBFB77" style="stroke: #A80036; stroke-width: 1.0;"/><ellipse cx="761.5" cy="639.0781" fill="#000000" rx="2.5" ry="2.5" style="stroke: #000000; stroke-width: 0.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="194" x="767" y="643.5122">This function starts webserver.</text><ellipse cx="761.5" cy="654.2109" fill="#000000" rx="2.5" ry="2.5" style="stroke: #000000; stroke-width: 0.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="394" x="767" y="658.645">So when this is called clients are able to connect a share data</text><rect fill="#FEFECE" filter="url(#fewimmgxxmy4b)" height="33.9688" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="143" x="587" y="629.5938"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="0" x="605" y="650.7324"/><text fill="#000000" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="115" x="605" y="650.7324">webserver_run()</text><rect fill="#FEFECE" filter="url(#fewimmgxxmy4b)" height="61.9063" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="152" x="582.5" y="686.7109"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="0" x="604.5" y="707.8496"/><text fill="#000000" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacingAndGlyphs" textLength="55" x="604.5" y="707.8496">Output:</text><ellipse cx="598" cy="717.1484" fill="#000000" rx="2.5" ry="2.5" style="stroke: #000000; stroke-width: 0.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="117" x="603.5" y="721.8184">Server has started</text><ellipse cx="598" cy="731.1172" fill="#000000" rx="2.5" ry="2.5" style="stroke: #000000; stroke-width: 0.0;"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="121" x="603.5" y="735.7871">Press Ctrl+C to exit</text><rect fill="#FEFECE" filter="url(#fewimmgxxmy4b)" height="33.9688" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="28" x="1271" y="172.8906"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="8" x="1281" y="194.0293">1</text><polygon fill="#FEFECE" filter="url(#fewimmgxxmy4b)" points="977.25,754.6172,989.25,766.6172,977.25,778.6172,965.25,766.6172,977.25,754.6172" style="stroke: #A80036; stroke-width: 1.5;"/><rect fill="#FEFECE" filter="url(#fewimmgxxmy4b)" height="33.9688" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="56" x="949.25" y="798.6172"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="36" x="959.25" y="819.7559">Catch</text><rect fill="#FEFECE" filter="url(#fewimmgxxmy4b)" height="33.9688" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="55" x="949.75" y="852.5859"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="31" x="963.75" y="873.7246">Error</text><ellipse cx="977.25" cy="917.5547" fill="#FFFFFF" filter="url(#fewimmgxxmy4b)" rx="11" ry="11" style="stroke: #000000; stroke-width: 1.0;"/><ellipse cx="977.25" cy="917.5547" fill="#000000" rx="6" ry="6" style="stroke: #7F7F7F; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="977.25" x2="977.25" y1="50.9531" y2="70.9531"/><polygon fill="#A80036" points="973.25,60.9531,977.25,70.9531,981.25,60.9531,977.25,64.9531" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="658.5" x2="658.5" y1="262.7344" y2="282.7344"/><polygon fill="#A80036" points="654.5,272.7344,658.5,282.7344,662.5,272.7344,658.5,276.7344" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="658.5" x2="658.5" y1="330.6719" y2="350.6719"/><polygon fill="#A80036" points="654.5,340.6719,658.5,350.6719,662.5,340.6719,658.5,344.6719" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="658.5" x2="658.5" y1="412.5781" y2="446.3359"/><polygon fill="#A80036" points="654.5,436.3359,658.5,446.3359,662.5,436.3359,658.5,440.3359" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="658.5" x2="658.5" y1="508.2422" y2="547.6875"/><polygon fill="#A80036" points="654.5,537.6875,658.5,547.6875,662.5,537.6875,658.5,541.6875" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="658.5" x2="658.5" y1="609.5938" y2="629.5938"/><polygon fill="#A80036" points="654.5,619.5938,658.5,629.5938,662.5,619.5938,658.5,623.5938" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="658.5" x2="658.5" y1="663.5625" y2="686.7109"/><polygon fill="#A80036" points="654.5,676.7109,658.5,686.7109,662.5,676.7109,658.5,680.7109" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="904.25" x2="658.5" y1="150.8906" y2="150.8906"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="658.5" x2="658.5" y1="150.8906" y2="172.8906"/><polygon fill="#A80036" points="654.5,162.8906,658.5,172.8906,662.5,162.8906,658.5,166.8906" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1050.25" x2="1285" y1="150.8906" y2="150.8906"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1285" x2="1285" y1="150.8906" y2="172.8906"/><polygon fill="#A80036" points="1281,162.8906,1285,172.8906,1289,162.8906,1285,166.8906" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="658.5" x2="658.5" y1="748.6172" y2="766.6172"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="658.5" x2="965.25" y1="766.6172" y2="766.6172"/><polygon fill="#A80036" points="955.25,762.6172,965.25,766.6172,955.25,770.6172,959.25,766.6172" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1285" x2="1285" y1="206.8594" y2="766.6172"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="1285" x2="989.25" y1="766.6172" y2="766.6172"/><polygon fill="#A80036" points="999.25,762.6172,989.25,766.6172,999.25,770.6172,995.25,766.6172" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="977.25" x2="977.25" y1="118.8906" y2="138.8906"/><polygon fill="#A80036" points="973.25,128.8906,977.25,138.8906,981.25,128.8906,977.25,132.8906" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="977.25" x2="977.25" y1="778.6172" y2="798.6172"/><polygon fill="#A80036" points="973.25,788.6172,977.25,798.6172,981.25,788.6172,977.25,792.6172" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="977.25" x2="977.25" y1="832.5859" y2="852.5859"/><polygon fill="#A80036" points="973.25,842.5859,977.25,852.5859,981.25,842.5859,977.25,846.5859" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="977.25" x2="977.25" y1="886.5547" y2="906.5547"/><polygon fill="#A80036" points="973.25,896.5547,977.25,906.5547,981.25,896.5547,977.25,900.5547" style="stroke: #A80036; stroke-width: 1.0;"/><!--MD5=[f30ff4e4a70c87b2d4da7fc9657411f0]
@startuml
title Server.cpp Part:2 (To Run Server)


start
 
:                      **int main**
note right: int main( int argc, char* argv[]); 


if ( Check command line) then (Try)
  : **if (argc != 3)** 
  *check for IP and Port No
  * Server address: << argc[1] )
  * Server port:  << argv[2] )
   *Server is starting ;
  
  
 
  
  
  :           **webserver_ setup(argv[1], argv[2])**
  server::server_setup (char *address char *port);

  note Left:This function helps in setting up the server.
  
 
  :                 **webserver_setOnInitEventListener**
  Pointer to function. 
  void <name of function>(std::string *name, std::string *value);

note left
 * This function sets on initialize listener
 * It means if unknown shared variable appears 
   server generates this event.
 * Listener is function where initialization should be done.
end note
 
 :                  **webserver_setOnUpdateEventListener**
  Pointer to function.
  void <name of function>(std::string *name, std::string *value);

note right
 * This function sets on update listener.
 *It means some shared variable was updated by client.
 * server updates shared value inside 
   and then generate this event.
 * So application can react somehow 
  (reconfiguration or something like that).
 end note

:       **webserver_setOnCommandEventListener**
Pointer to function
void <name of function>(std::string *message);

note left
* This function sets on command listener
* It means if client sent some message that starts with “command:” 
   server generates event.
 end note
 
  :  **webserver_run()**;
 
  note right
  *This function starts webserver.
  *So when this is called clients are able to connect a share data
 end note

:   **Output:**
*Server has started
*Press Ctrl+C to exit;


else (return)
  :1;

endif

:Catch;
: Error;


stop
@enduml

PlantUML version 1.2019.12(Sun Nov 03 10:24:54 UTC 2019)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Java Version: 1.7.0_25-b15
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>